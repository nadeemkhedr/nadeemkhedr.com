{"componentChunkName":"component---src-templates-blog-post-js","path":"/2014-08-18---ember-js-custom-select-with-change-event/","result":{"data":{"site":{"siteMetadata":{"title":"Nadeem Khedr"}},"markdownRemark":{"id":"59dfeaa1-005f-5f95-a968-29efe2665f70","excerpt":"We want to implement basic change callback functionality on a Ember Select , sadly its not part of the ember select view, if you searched about how to implement…","html":"<p>We want to implement basic change callback functionality on a Ember Select , sadly its not part of the ember select view, if you searched about how to implement it, most of the answers would be: make an observable, the hard part if you want to save data when the select changes, that would fire the observable indefinitely and to work around it you would have to hack it</p>\n<p>The solution actually is very basic, we just have to extend the <code class=\"language-text\">Ember.Select</code> and add <code class=\"language-text\">onChange</code> callback function</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">App<span class=\"token punctuation\">.</span>SelectView <span class=\"token operator\">=</span> Ember<span class=\"token punctuation\">.</span>Select<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">change</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> self <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">var</span> callback <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'onChange'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      Em<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">.</span><span class=\"token function\">later</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        self<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'controller'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<blockquote>\n<p>call to <code class=\"language-text\">this._super()</code> its mandatory.</p>\n</blockquote>\n<p>And to call it</p>\n<div class=\"gatsby-highlight\" data-language=\"hbs\"><pre class=\"language-hbs\"><code class=\"language-hbs\">{{view App.SelectView\n  content=items\n  value=item\n  prompt=’Select Item’\n  onChange=’saveItem’\n}}</code></pre></div>","frontmatter":{"title":"Ember.js Custom Select with Change Event Callback","date":"August 18, 2014","description":null}},"previous":{"fields":{"slug":"/2014-03-16---redirect-to-the-original-requested-page-after-login-using-angularjs/"},"frontmatter":{"title":"Redirect to the original requested page after login using AngularJs"}},"next":{"fields":{"slug":"/2014-08-24---how-to-call-onroutechange-and-onrouteexit-in-ember-js/"},"frontmatter":{"title":"How to call onRouteChange and onRouteExit in Ember.js"}}},"pageContext":{"id":"59dfeaa1-005f-5f95-a968-29efe2665f70","previousPostId":"337689ab-9849-5c2d-8c51-e5738946e055","nextPostId":"37b06ce3-5213-5e61-b381-d351315aaf6d"}},"staticQueryHashes":["2841359383","48398127"]}