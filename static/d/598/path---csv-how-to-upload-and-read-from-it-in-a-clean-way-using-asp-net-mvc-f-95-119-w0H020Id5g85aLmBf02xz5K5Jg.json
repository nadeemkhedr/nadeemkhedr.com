{"data":{"site":{"siteMetadata":{"title":"Nadeem Khedr","author":"Nadeem Khedr"}},"markdownRemark":{"id":"104ea8e3-6328-59b3-9a93-36b54cbb2767","excerpt":"What we will be using FileHelpers   (for parsing the CSV file)  you can download it with nuget Asp.net MVC 3 The Goal I want to upload a CSV file to the server…","html":"<p>What we will be using</p>\n<ul>\n<li><a href=\"http://www.filehelpers.com/\" title=\"FileHelpers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">FileHelpers</a> <em>(for parsing the CSV file)</em> you can download it with nuget</li>\n<li>Asp.net MVC 3</li>\n</ul>\n<h2>The Goal</h2>\n<p>I want to upload a CSV file to the server and read it as a collection of objects</p>\n<p><strong>The Goal is turning these records to a List of objects with int Id and string Name</strong></p>\n<p>Lets get right into it</p>\n<h2>Viewing the form</h2>\n<h3>Home Controller</h3>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">ViewResult</span> <span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">View</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Show.cshtml</h3>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">@using (Html.BeginForm(\"ProcessCsv\", \"HomeController\", FormMethod.Post, new { enctype = \"multipart/form-data\" }))\n  {\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>Import Using CSV<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>control-group<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>controls<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>model<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">accept</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>csv<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>model<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-val</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-val-required</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>File is required<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>btn btn-primary<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Import<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  }</code></pre></div>\n<p>Lets talk about the view for a little bit, First in the form tag the attribute <code class=\"language-text\">enctype = “multipart/form-data”</code> is a must if the form contains a file upload</p>\n<blockquote>\n<p><code class=\"language-text\">multipart/form-data</code> is a type of encoding the form and you should use it when you have a file upload so the server can understand it</p>\n</blockquote>\n<p>As you can see i wrote manually the <code class=\"language-text\">data-*</code> attributes that will trigger the Asp.net unobtrusive validations , because there is no html helpers for input <code class=\"language-text\">type=&quot;file&quot;</code></p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>model<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">accept</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>csv<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>model<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-val</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-val-required</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>File is required<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<p>i made it required by writing <code class=\"language-text\">data-val=true</code> &#x26; <code class=\"language-text\">data-val-required=msg</code> and only accepts <code class=\"language-text\">csv</code> files</p>\n<blockquote>\n<p><code class=\"language-text\">accept</code> will make the input only accepts csv files (jquery.validate uses the accept attribute to validate the element)</p>\n</blockquote>\n<h2>Posting data from the form</h2>\n<h3>Home Controller</h3>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">ViewResult</span> <span class=\"token function\">ProcessCsv</span><span class=\"token punctuation\">(</span>EventItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> model<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">View</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Model</h3>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token punctuation\">[</span><span class=\"token class-name\">DelimitedRecord</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token class-name\">IgnoreFirst</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">EventItem</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> Id <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">string</span> Name <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>The two attributes <code class=\"language-text\">DelimitedRecord</code> &#x26; <code class=\"language-text\">IgnoreFirst</code> are FileHelpers attributes they are configrations to map between the CSV and our model</p>\n</blockquote>\n<p>You must now be saying there is something wrong happening because in our view we uploaded a file , how the action takes <code class=\"language-text\">EventItem[]</code> as a parameter instead of <code class=\"language-text\">HttpPostedFileBase</code></p>\n<p>The secret is because we implemented a <strong>custom model binder</strong> that will do exactly that</p>\n<h3>The Model Binder</h3>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CsvModelBinder</span><span class=\"token operator\">&lt;</span>T<span class=\"token operator\">></span> <span class=\"token punctuation\">:</span> <span class=\"token class-name\">DefaultModelBinder</span> <span class=\"token keyword\">where</span> T <span class=\"token punctuation\">:</span> <span class=\"token keyword\">class</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token keyword\">object</span> <span class=\"token function\">BindModel</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ControllerContext</span> controllerContext<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ModelBindingContext</span> bindingContext<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> csv <span class=\"token operator\">=</span>   bindingContext<span class=\"token punctuation\">.</span>ValueProvider<span class=\"token punctuation\">.</span><span class=\"token function\">GetValue</span><span class=\"token punctuation\">(</span>bindingContext<span class=\"token punctuation\">.</span>ModelName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> file <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>csv<span class=\"token punctuation\">.</span><span class=\"token class-name\">RawValue</span> <span class=\"token keyword\">as</span> HttpPostedFileBase<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span><span class=\"token operator\">?</span> Enumerable<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Empty</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">HttpPostedFileBase</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">FirstOrDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>file <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> file<span class=\"token punctuation\">.</span>ContentLength <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n      bindingContext<span class=\"token punctuation\">.</span>ModelState<span class=\"token punctuation\">.</span><span class=\"token function\">AddModelError</span><span class=\"token punctuation\">(</span>\n        <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"Please select a valid CSV file\"</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StreamReader</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span>InputStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">try</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> engine <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token generic-method\"><span class=\"token function\">FileHelperEngine</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> engine<span class=\"token punctuation\">.</span><span class=\"token function\">ReadStream</span><span class=\"token punctuation\">(</span>reader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> c<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">{</span>\n        bindingContext<span class=\"token punctuation\">.</span>ModelState<span class=\"token punctuation\">.</span><span class=\"token function\">AddModelError</span><span class=\"token punctuation\">(</span>bindingContext<span class=\"token punctuation\">.</span>ModelName<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">.</span>Message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>In Global.ascx.cs</h3>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">ModelBinders<span class=\"token punctuation\">.</span>Binders<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span>EventItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token generic-method\"><span class=\"token function\">CsvModelBinder</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">EventItem</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>We made a generic <strong>CSV model binder</strong> and in our <code class=\"language-text\">global.ascx.cs</code> we will map the model that we will use as a CSV model to the CSV model binder and give it that model as its type.</p>\n<p>The model binder logic is that it will turn the file to a <code class=\"language-text\">StreamReader</code>, then will try to read it using the <code class=\"language-text\">FileHelper</code> if it throws an exception <em>(the files types are not correct, or other reason)</em> will add an error to the <code class=\"language-text\">ModelState</code> so in the controller we can check if its valid using <code class=\"language-text\">ModelState.IsValid</code></p>","frontmatter":{"title":"CSV how to upload and read from it , in a clean way using Asp.net MVC","date":"July 06, 2013"}}},"pageContext":{"slug":"csv-how-to-upload-and-read-from-it-in-a-clean-way-using-asp-net-mvc/","previous":{"fields":{"slug":"asp-net-mvc-jsonresult-anonymous-types-and-testing/"},"frontmatter":{"title":"Asp.net MVC JsonResult, Anonymous types and Testing"}},"next":{"fields":{"slug":"date-parsing-with-javascript-introducing-moment-js/"},"frontmatter":{"title":"Date parsing with JavaScript, Introducing Moment.js"}}}}