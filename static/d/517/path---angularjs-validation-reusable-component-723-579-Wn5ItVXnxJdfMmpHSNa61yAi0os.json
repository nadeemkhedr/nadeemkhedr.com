{"data":{"site":{"siteMetadata":{"title":"Gatsby Starter Blog","author":"Kyle Mathews"}},"markdownRemark":{"id":"62bda634-26b3-5311-a240-d1441586623a","excerpt":"The problem is the code required for bootstrapping an angular form is quite a lot The normal angular way of writing a form with validation messages To reference…","html":"<p>The problem is the code required for bootstrapping an angular form is quite a lot</p>\n<h2>The normal angular way of writing a form with validation messages</h2>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>myForm<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>control-group<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ng-class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{<span class=\"token punctuation\">'</span>error<span class=\"token punctuation\">'</span> : myForm.userId.$invalid &amp;&amp; myForm.userId.$dirty}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>control-label<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">></span></span>User Id<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>userId<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ng-model</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>userId<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">required</span> <span class=\"token attr-name\">ng-pattern</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/^id_[0-9]+$/<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>custom-error<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">ng-show</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>myForm.userId.$dirty &amp;&amp; myForm.userId.$invalid<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Invalid:\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">ng-show</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>myForm.userId.$error.required<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>User id is required.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">ng-show</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>myForm.userId.$error.pattern<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>User id doesn't respect the pattern.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<ul>\n<li>To reference the field status (<code class=\"language-text\">valid</code>, <code class=\"language-text\">dirty</code>) you access it by <code class=\"language-text\">{formname}.{field name}</code></li>\n<li><code class=\"language-text\">$dirty</code> means the field has been changed, the idea of checking on it is that we don’t want to show the validation messages when the form first loads</li>\n</ul>\n<p>The problem with this  is that there is too much duplicate checking on every validation message on every element</p>\n<h2>The new way after using custom directives for writing a form</h2>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">submit-valid</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>submiForm()<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>customer-form<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">novalidate</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>field</span> <span class=\"token attr-name\">ng-model</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>customer.FirstName<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>text<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">label</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>First Name:<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">required</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>validator</span> <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>required<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span>First name is required<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>validator</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>field</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h3>The field directive</h3>\n<p>The beauty of this is a couple of things</p>\n<ul>\n<li>The code required for bootstrapping a form is much much less and is CLEAN</li>\n<li>The <code class=\"language-text\">field</code> directive is easy to extend, you can easily put other directives on it and they will be applied to the input directly (custom <code class=\"language-text\">date-picker</code> for example or custom validation directive or even a <code class=\"language-text\">class</code> attribute)</li>\n</ul>\n<h3>The submit-valid Directive</h3>\n<p>Normally in angular the validation message for a field will only appear after the field is changed dirty &#x26; is invalid</p>\n<p>What we want is that the validation message appears when the field is invalid and dirty <strong><em>OR when the form has been attempted to be submitted &#x26; is invalid</em></strong></p>\n<p><code class=\"language-text\">submit-valid</code> takes a function and it will fire on* form submit* but only if the form is <code class=\"language-text\">valid</code> In short its exactly like <strong><em>ng-submit</em></strong> but with two extra features</p>\n<ul>\n<li>Like i said it will fire the callback function <strong>only</strong> if the form is <strong>valid</strong></li>\n<li>It will also track a value on a form, <code class=\"language-text\">attempt</code> and when the form has been tried to be submitted it will set it to <code class=\"language-text\">true</code></li>\n</ul>\n<p>The <code class=\"language-text\">field</code> directive respects the value of the <code class=\"language-text\">attempt</code> variable on the form <strong>if its there</strong> , so now if you put <code class=\"language-text\">submit-valid</code> on a form when trying to submit it, the validation messages for the invalid fields will appear</p>\n<h3>Use Textarea or Select</h3>\n<p>The <code class=\"language-text\">field</code> directives works on <code class=\"language-text\">Input</code>, <code class=\"language-text\">textarea</code> &#x26; <code class=\"language-text\">select</code></p>\n<p>To use <code class=\"language-text\">textarea</code> or <code class=\"language-text\">select</code> you specify a <code class=\"language-text\">template</code> property on the <code class=\"language-text\">field</code> directive with value of <code class=\"language-text\">textarea</code> or <code class=\"language-text\">select</code> and pass the same extra parameters that you would pass to either of them (<code class=\"language-text\">ng-options</code> for <code class=\"language-text\">select</code> for example)</p>\n<h2>Resources</h2>\n<p>The field directive was made by <a href=\"https://github.com/petebacondarwin\" title=\"Github\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Pete Bacon Darwin</a> and its original example is <a href=\"http://plnkr.co/edit/3zMsNnpNfOFwExSqLj2I?p=preview\" title=\"plnkr\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>, I just modified it to work with the <code class=\"language-text\">submit-valid</code> directive</p>\n<p><a href=\"http://plnkr.co/edit/lOCQi7\" title=\"plnkr\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">The plnkr for the code</a></p>","frontmatter":{"title":"AngularJs Validation Make A Reusable Component","date":"September 08, 2013"}}},"pageContext":{"slug":"angularjs-validation-reusable-component/","previous":{"fields":{"slug":"build-angularjs-grid-with-server-side-paging-sorting-filtering/"},"frontmatter":{"title":"Build AngularJS Grid with server side paging, sorting & filtering"}},"next":{"fields":{"slug":"angularjs-good-unit-test-structure-for-controllers/"},"frontmatter":{"title":"AngularJs Good Unit Test Structure For Controllers & How to test ajax code and Promises"}}}}