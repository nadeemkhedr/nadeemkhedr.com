{"data":{"site":{"siteMetadata":{"title":"Nadeem Khedr","author":"Nadeem Khedr"}},"markdownRemark":{"id":"02f4daeb-7607-5bad-b352-bfe6917cb5b6","excerpt":"What we want to do is that when the user tries to go to a page and he is not logged in, we want to redirect him back to that page after he login successfully…","html":"<p>What we want to do is that when the user tries to go to a page and he is not logged in, we want to redirect him back to that page after he login successfully There is two different scenarios that we want to handle</p>\n<ul>\n<li>The user is not logged in to our site and tries to access it <em>(no cookie stored)</em></li>\n<li>When the user is already in our site and he makes a request to the server and the the server  returns unauthorized <code class=\"language-text\">401</code> (in case the user is logged in and the cookie times out)</li>\n</ul>\n<p>the idea behind the implementation is simple, what we will be doing is on the app load we will check if the user is logged in <em>(there is a cookie)</em>, if not we will save the requested url* (the page that the user originally wanted to go to)* and after that we will redirect the user to the login screen when he login we will redirect him back to the url that he originally requested</p>\n<p>the same scenario will happens when the server returns unauthorized header <code class=\"language-text\">401</code> we will apply that using an interceptor that will checks the status code returned from the server if its <code class=\"language-text\">401</code> we will do the same thing as above</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> angular<span class=\"token punctuation\">.</span><span class=\"token function\">module</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myApp'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//where we will store the attempted url</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token string\">'redirectToUrlAfterLogin'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> url<span class=\"token punctuation\">:</span> <span class=\"token string\">'/'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//this service will be responsible for authentication and also saving and redirecting to the attempt url when logging in</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">factory</span><span class=\"token punctuation\">(</span><span class=\"token string\">'appAuth'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>$location<span class=\"token punctuation\">,</span> $cookies<span class=\"token punctuation\">,</span> api<span class=\"token punctuation\">,</span> redirectToUrlAfterLogin<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    login<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>credentials<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> api<span class=\"token punctuation\">.</span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span>credentials<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    isLoggedIn<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>$cookies<span class=\"token punctuation\">.</span><span class=\"token constant\">FPSSO</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//convert value to bool</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    saveAttemptUrl<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>$location<span class=\"token punctuation\">.</span><span class=\"token function\">path</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token string\">'/login'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        redirectToUrlAfterLogin<span class=\"token punctuation\">.</span>url <span class=\"token operator\">=</span> $location<span class=\"token punctuation\">.</span><span class=\"token function\">path</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        redirectToUrlAfterLogin<span class=\"token punctuation\">.</span>url <span class=\"token operator\">=</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    redirectToAttemptedUrl<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      $location<span class=\"token punctuation\">.</span><span class=\"token function\">path</span><span class=\"token punctuation\">(</span>redirectToUrlAfterLogin<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// When the app loads</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>$location<span class=\"token punctuation\">,</span> appAuth<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>appAuth<span class=\"token punctuation\">.</span><span class=\"token function\">isLoggedIn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    appAuth<span class=\"token punctuation\">.</span><span class=\"token function\">saveAttemptUrl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    $location<span class=\"token punctuation\">.</span><span class=\"token function\">path</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/login'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//Setting up the interceptor to handle when the server returns 401</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">config</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>$httpProvider<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  $httpProvider<span class=\"token punctuation\">.</span>responseInterceptors<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'securityInterceptor'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">provider</span><span class=\"token punctuation\">(</span><span class=\"token string\">'securityInterceptor'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">$get</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>$location<span class=\"token punctuation\">,</span> $q<span class=\"token punctuation\">,</span> $injector<span class=\"token punctuation\">,</span> $cookies<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>promise<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> appAuth <span class=\"token operator\">=</span> $injector<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'appAuth'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> promise<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>status <span class=\"token operator\">===</span> <span class=\"token number\">401</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">delete</span> $cookies<span class=\"token punctuation\">.</span><span class=\"token constant\">FPSSO</span><span class=\"token punctuation\">;</span>\n          appAuth<span class=\"token punctuation\">.</span><span class=\"token function\">saveAttemptUrl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          $location<span class=\"token punctuation\">.</span><span class=\"token function\">path</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/login'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> $q<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>To use the $cookies service you need to reference the <code class=\"language-text\">angular-cookies.js</code> and when you are defining your module you need to depend on <code class=\"language-text\">ngCookies</code></p>\n</blockquote>\n<!-- -->\n<blockquote>\n<p>the <code class=\"language-text\">api</code> service is just a custom service that has a <code class=\"language-text\">login()</code> method, it just makes an ajax request to the server with the credentials passed and then returns a promise</p>\n</blockquote>\n<!-- -->\n<blockquote>\n<p>we are using <a href=\"http://code.angularjs.org/1.0.8/docs/api/ng.$http#responseinterceptors\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">responseInterceptors</a>  which is fine if your using angular bellow 1.1.4 as of 1.1.4 it is considered <em>deprecated</em> and you should be using <a href=\"http://docs.angularjs.org/api/ng/service/$http#interceptors\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">interceptors</a> which are easier to use</p>\n</blockquote>\n<p>The last piece of our app is the actual login screen, i’ll just show its controller because its pretty simple</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">app<span class=\"token punctuation\">.</span><span class=\"token function\">controller</span><span class=\"token punctuation\">(</span><span class=\"token string\">'LoginCtrl'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>$scope<span class=\"token punctuation\">,</span> $location<span class=\"token punctuation\">,</span> api<span class=\"token punctuation\">,</span> appAuth<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  $scope<span class=\"token punctuation\">.</span>model <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>UserName<span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> Password<span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>appAuth<span class=\"token punctuation\">.</span><span class=\"token function\">isLoggedIn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    $location<span class=\"token punctuation\">.</span><span class=\"token function\">path</span><span class=\"token punctuation\">(</span>‘<span class=\"token operator\">/</span>’<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  $scope<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">submit</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> credentials <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"UserName\"</span><span class=\"token punctuation\">:</span> $scope<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>UserName<span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"Password\"</span><span class=\"token punctuation\">:</span> $scope<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>Password\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    api<span class=\"token punctuation\">.</span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span>credentials<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      appAuth<span class=\"token punctuation\">.</span><span class=\"token function\">redirectToAttemptedUrl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      $scope<span class=\"token punctuation\">.</span>ErrorMessage <span class=\"token operator\">=</span> <span class=\"token string\">\"Login failed. Incorrect Username or Password\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>That’s about it, whats happening here is when the user login we will redirect him to the page that he was trying to access by calling <code class=\"language-text\">appAuth.redirectToAttemptedUrl()</code></p>","frontmatter":{"title":"Redirect to the original requested page after login using AngularJs","date":"March 16, 2014"}}},"pageContext":{"slug":"redirect-to-the-original-requested-page-after-login-using-angularjs/","previous":{"fields":{"slug":"why-sass-is-awesome-make-an-elegant-button-with-only-one-color-to-generate/"},"frontmatter":{"title":"Why SASS is awesome, make an elegant button with only one color to generate"}},"next":{"fields":{"slug":"ember-js-custom-select-with-change-event/"},"frontmatter":{"title":"Ember.js Custom Select with Change Event Callback"}}}}